ush.sample
#!/bin/sh

# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

#remote="$1"
#url="$2"

#z40=0000000000000000000000000000000000000000

#while read local_ref local_sha remote_ref remote_sha
#do
#	if [ "$local_sha" = $z40 ]
#	then
#		# Handle delete
#		:
#	else
#		if [ "$remote_sha" = $z40 ]
#		then
#			# New branch, examine all commits
#			range="$local_sha"
#		else
#			# Update to existing branch, examine new commits
#			range="$remote_sha..$local_sha"
#		fi
#
#		# Check for WIP commit
#		commit=`git rev-list -n 1 --grep '^WIP' "$range"`
#		if [ -n "$commit" ]
#		then
#			echo >&2 "Found WIP commit in $local_ref, not pushing"
#			exit 1
#		fi
#	fi
#done
push=`npm run lint-ts && npm run lint-scss`
if [ -n "$push"]
then
    echo "Do not push files with lint errors"
    echo $push
    exit 1
fi
exit 0
